apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.network/lognet: "true"
        io.kompose.service: app
    spec:
      containers:
      - env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MYSQL_ALLOW_EMPTY_PASSWORD
              name: variables-env
        - name: SUPERVISOR_DBHOST
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_DBHOST
              name: variables-env
        - name: SUPERVISOR_DBNAME
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_DBNAME
              name: variables-env
        - name: SUPERVISOR_DBPASS
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_DBPASS
              name: variables-env
        - name: SUPERVISOR_DBPORT
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_DBPORT
              name: variables-env
        - name: SUPERVISOR_DBUSER
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_DBUSER
              name: variables-env
        - name: SUPERVISOR_INTERVAL
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_INTERVAL
              name: variables-env
        - name: SUPERVISOR_LISTENPORT
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_LISTENPORT
              name: variables-env
        - name: SUPERVISOR_NIVELTRAZA
          valueFrom:
            configMapKeyRef:
              key: SUPERVISOR_NIVELTRAZA
              name: variables-env
        image: app
        imagePullPolicy: ""
        name: kcapp-c
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
